# check connection
ansible all --key-file ~/.ssh/ansible -i inventory -m ping
ansible all -m ping # when config files are created

# check host list
ansible all --list-hosts

# check the facts
ansible all -m gather_facts
ansible all -m gather_facts --limit <ip address>

# update in debian based update list
ansible all -m apt -a update_cache=true --become --ask-become-pass

# install a package
anisble all -m apt -a name=vim-nox --become --ask-become-pass

# install a package via the apt module with latest verison
anisble all -m apt -a "name=snapd state=latest" --become --ask-become-pass

# upgrade all the package update
ansible all -m apt upgrade=dist --become --ask-become-pass

# ansible tags list
ansible-playbook --list-tags <playbook.yml>

# use of tags
## method 1: for single tags
ansible-playbook --tags <tags_name> --ask-become-pass <playbook.yml>

## method 2: for multiple tags
ansible-playbook --tags <"tags_name,..."> --ask-become-pass <playbook.yml>

#encryption with ansible
1. create a password (strong) with randomly generated
2. create a file in home/user derectory (~/.vault_key); then paste the password and save it.
3. change the permission that only owner can read and write it.
## to ancript the file
ansible-vault encrypt <file_name>
# or
ansible-vault encrypt --vault-password-file ~/.vault_key <file_name>

## decrypt the file
ansible-vault decrypt --vault-password-file ~/.vault_key <file_name>

## edit encrypted file
anisble-vault edit --vault-password-file ~/.vault_key <file_name>

## view encrypted file
ansible-vault view --vault-password-file ~/.vault-key <file_name>

# change the key
ansible rekey <file_name> --vault-password-file ~/.vault_key
